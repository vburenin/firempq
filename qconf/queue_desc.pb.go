// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: qconf/queue_desc.proto

package qconf

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import io "io"
import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type QueueDescription struct {
	ExportId             uint64   `protobuf:"varint,1,req,name=export_id,json=exportId" json:"export_id"`
	SType                string   `protobuf:"bytes,2,req,name=s_type,json=sType" json:"s_type"`
	Name                 string   `protobuf:"bytes,3,req,name=name" json:"name"`
	CreateTs             int64    `protobuf:"varint,4,req,name=create_ts,json=createTs" json:"create_ts"`
	Disabled             bool     `protobuf:"varint,5,req,name=disabled" json:"disabled"`
	ToDelete             bool     `protobuf:"varint,6,req,name=to_delete,json=toDelete" json:"to_delete"`
	ServiceId            string   `protobuf:"bytes,7,req,name=service_id,json=serviceId" json:"service_id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueueDescription) Reset()         { *m = QueueDescription{} }
func (m *QueueDescription) String() string { return proto.CompactTextString(m) }
func (*QueueDescription) ProtoMessage()    {}
func (*QueueDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_queue_desc_6360f97ae374d6ea, []int{0}
}
func (m *QueueDescription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueueDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueueDescription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *QueueDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueueDescription.Merge(dst, src)
}
func (m *QueueDescription) XXX_Size() int {
	return m.Size()
}
func (m *QueueDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_QueueDescription.DiscardUnknown(m)
}

var xxx_messageInfo_QueueDescription proto.InternalMessageInfo

func (m *QueueDescription) GetExportId() uint64 {
	if m != nil {
		return m.ExportId
	}
	return 0
}

func (m *QueueDescription) GetSType() string {
	if m != nil {
		return m.SType
	}
	return ""
}

func (m *QueueDescription) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueueDescription) GetCreateTs() int64 {
	if m != nil {
		return m.CreateTs
	}
	return 0
}

func (m *QueueDescription) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *QueueDescription) GetToDelete() bool {
	if m != nil {
		return m.ToDelete
	}
	return false
}

func (m *QueueDescription) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func init() {
	proto.RegisterType((*QueueDescription)(nil), "qconf.QueueDescription")
}
func (m *QueueDescription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueueDescription) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0x8
	i++
	i = encodeVarintQueueDesc(dAtA, i, uint64(m.ExportId))
	dAtA[i] = 0x12
	i++
	i = encodeVarintQueueDesc(dAtA, i, uint64(len(m.SType)))
	i += copy(dAtA[i:], m.SType)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintQueueDesc(dAtA, i, uint64(len(m.Name)))
	i += copy(dAtA[i:], m.Name)
	dAtA[i] = 0x20
	i++
	i = encodeVarintQueueDesc(dAtA, i, uint64(m.CreateTs))
	dAtA[i] = 0x28
	i++
	if m.Disabled {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	dAtA[i] = 0x30
	i++
	if m.ToDelete {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i++
	dAtA[i] = 0x3a
	i++
	i = encodeVarintQueueDesc(dAtA, i, uint64(len(m.ServiceId)))
	i += copy(dAtA[i:], m.ServiceId)
	return i, nil
}

func encodeVarintQueueDesc(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *QueueDescription) Size() (n int) {
	var l int
	_ = l
	n += 1 + sovQueueDesc(uint64(m.ExportId))
	l = len(m.SType)
	n += 1 + l + sovQueueDesc(uint64(l))
	l = len(m.Name)
	n += 1 + l + sovQueueDesc(uint64(l))
	n += 1 + sovQueueDesc(uint64(m.CreateTs))
	n += 2
	n += 2
	l = len(m.ServiceId)
	n += 1 + l + sovQueueDesc(uint64(l))
	return n
}

func sovQueueDesc(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozQueueDesc(x uint64) (n int) {
	return sovQueueDesc(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueueDescription) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueueDesc
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueueDescription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueueDescription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExportId", wireType)
			}
			m.ExportId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExportId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueueDesc
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueueDesc
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateTs", wireType)
			}
			m.CreateTs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreateTs |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Disabled", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Disabled = bool(v != 0)
			hasFields[0] |= uint64(0x00000010)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToDelete", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ToDelete = bool(v != 0)
			hasFields[0] |= uint64(0x00000020)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueueDesc
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000040)
		default:
			iNdEx = preIndex
			skippy, err := skipQueueDesc(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQueueDesc
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("export_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("s_type")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("name")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("create_ts")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("disabled")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("to_delete")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("service_id")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueueDesc(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueueDesc
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueueDesc
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthQueueDesc
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowQueueDesc
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipQueueDesc(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthQueueDesc = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueueDesc   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("qconf/queue_desc.proto", fileDescriptor_queue_desc_6360f97ae374d6ea) }

var fileDescriptor_queue_desc_6360f97ae374d6ea = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xcf, 0x31, 0x4e, 0xc3, 0x30,
	0x14, 0x06, 0xe0, 0xda, 0x4d, 0x4a, 0xe2, 0xa9, 0xf2, 0x80, 0x2c, 0x21, 0x05, 0x03, 0x4b, 0x26,
	0xb8, 0x43, 0xd5, 0xa5, 0x23, 0xa8, 0xbb, 0x15, 0xec, 0x87, 0x64, 0xa9, 0xc4, 0xae, 0xfd, 0x8a,
	0xe8, 0x2d, 0x38, 0x56, 0x47, 0x4e, 0x80, 0x50, 0x38, 0x05, 0x5b, 0xe5, 0x34, 0x91, 0xb2, 0x7e,
	0xff, 0xaf, 0x5f, 0xef, 0xb1, 0xeb, 0xbd, 0x76, 0xed, 0xdb, 0xd3, 0xfe, 0x00, 0x07, 0x50, 0x06,
	0xa2, 0x7e, 0xf4, 0xc1, 0xa1, 0xe3, 0x79, 0xef, 0xf7, 0xff, 0x84, 0x2d, 0x9f, 0x53, 0xb6, 0x86,
	0xa8, 0x83, 0xf5, 0x68, 0x5d, 0xcb, 0xef, 0x58, 0x09, 0x9f, 0xde, 0x05, 0x54, 0xd6, 0x08, 0x22,
	0x69, 0x9d, 0xad, 0xb2, 0xd3, 0xcf, 0xed, 0xec, 0xa5, 0xb8, 0xf0, 0xc6, 0xf0, 0x1b, 0xb6, 0x88,
	0x0a, 0x8f, 0x1e, 0x04, 0x95, 0xb4, 0x2e, 0x87, 0x3c, 0x8f, 0xdb, 0xa3, 0x07, 0x2e, 0x58, 0xd6,
	0x36, 0xef, 0x20, 0xe6, 0x93, 0xa8, 0x97, 0xb4, 0xac, 0x03, 0x34, 0x08, 0x0a, 0xa3, 0xc8, 0x24,
	0xad, 0xe7, 0xe3, 0xf2, 0x85, 0xb7, 0x91, 0x4b, 0x56, 0x18, 0x1b, 0x9b, 0xd7, 0x1d, 0x18, 0x91,
	0x4b, 0x5a, 0x17, 0x63, 0x63, 0xd4, 0x34, 0x82, 0x4e, 0x19, 0xd8, 0x01, 0x82, 0x58, 0x4c, 0x2b,
	0xe8, 0xd6, 0xbd, 0xf2, 0x07, 0xc6, 0x22, 0x84, 0x0f, 0xab, 0x21, 0xbd, 0x70, 0x35, 0xb9, 0xa3,
	0x1c, 0x7c, 0x63, 0x56, 0xcb, 0x53, 0x57, 0x91, 0xef, 0xae, 0x22, 0xbf, 0x5d, 0x45, 0xbe, 0xfe,
	0xaa, 0xd9, 0x39, 0x00, 0x00, 0xff, 0xff, 0xff, 0xdf, 0x95, 0x6f, 0x2d, 0x01, 0x00, 0x00,
}
